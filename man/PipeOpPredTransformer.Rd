% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpPredTransformer.R
\name{PipeOpPredTransformer}
\alias{PipeOpPredTransformer}
\title{PipeOpPredTransformer}
\description{
Parent class for \code{\link{PipeOp}}s that transform \link[mlr3:Prediction]{Prediction} objects to
different types.
}
\section{Input and Output Channels}{

\code{\link{PipeOpPredTransformer}} has one input and output channel named \code{"input"} and \code{"output"}.
In training and testing these expect and produce \link[mlr3:Prediction]{mlr3::Prediction} objects with the type
depending on the transformers.
}

\section{State}{

The \verb{$state} is a named \code{list} with the \verb{$state} elements
\itemize{
\item \code{inpredtypes}: Predict types in the input prediction object during training.
\item \code{outpredtypes} : Predict types in the input prediction object during prediction, checked
against \code{inpredtypes}.
}
}

\section{Internals}{

Classes inheriting from \code{\link{PipeOpPredTransformer}} transform \link[mlr3:Prediction]{Prediction}
objects from one class (e.g. regr, classif) to another.
}

\seealso{
Other PipeOps: 
\code{\link{PipeOpPredTaskSurvRegr}},
\code{\link{PipeOpTaskTransformer}},
\code{\link{PipeOpTransformer}},
\code{\link{mlr_pipeops_trafopred_regrsurv}},
\code{\link{mlr_pipeops_trafopred_survregr}},
\code{\link{mlr_pipeops_trafotask_regrsurv}},
\code{\link{mlr_pipeops_trafotask_survregr}}

Other Transformers: 
\code{\link{PipeOpPredTaskSurvRegr}},
\code{\link{PipeOpTaskTransformer}},
\code{\link{PipeOpTransformer}}
}
\concept{PipeOps}
\concept{Transformers}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3proba:PipeOpTransformer]{mlr3proba::PipeOpTransformer}} -> \code{PipeOpPredTransformer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpPredTransformer$new()}}
\item \href{#method-clone}{\code{PipeOpPredTransformer$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3proba" data-topic="PipeOpTransformer" data-id="predict_internal">}\href{../../mlr3proba/html/PipeOpTransformer.html#method-predict_internal}{\code{mlr3proba::PipeOpTransformer$predict_internal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3proba" data-topic="PipeOpTransformer" data-id="train_internal">}\href{../../mlr3proba/html/PipeOpTransformer.html#method-train_internal}{\code{mlr3proba::PipeOpTransformer$train_internal()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredTransformer$new(
  id,
  param_set = ParamSet$new(),
  param_vals = list(),
  packages = character(0),
  input = data.table(),
  output = data.table()
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredTransformer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
