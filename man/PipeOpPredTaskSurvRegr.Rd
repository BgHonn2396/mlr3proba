% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpPredTaskSurvRegr.R
\name{PipeOpPredTaskSurvRegr}
\alias{PipeOpPredTaskSurvRegr}
\title{PipeOpPredTaskSurvRegr}
\format{
Abstract \code{\link{R6Class}} inheriting from \code{\link{PipeOp}}.
}
\description{
Transforms \link{PredictionSurv} to \link[mlr3:TaskRegr]{TaskRegr}.
}
\section{Input and Output Channels}{

\code{\link{PipeOpPredTaskSurvRegr}} has one input channel named \code{"input"} and two output channels named
\code{"task"} and \code{"pred"}. \code{"input"} is the \link{PredictionSurv} to transform, \code{"task"} is a \link{TaskSurv}
for extracting features from, and \code{"pred"} is a \link{PredictionSurv} to transform.
}

\section{State}{

The \verb{$state} is a named \code{list} with the \verb{$state} elements
\itemize{
\item \code{instatus}: Censoring status from input training task.
\item \code{outstatus} : Censoring status from input prediction task.
}
}

\section{Parameters}{

The parameters are
\itemize{
\item \verb{target::character(1))}\cr
Prediction to use for creating the new task. Should be one of: \code{"response"} (default),
\verb{"lp", "crank"}.
}
}

\section{Internals}{

\link{PipeOpPredTaskSurvRegr} simply takes the prediction from the \link{PredictionSurv} and creates a
\link[mlr3:TaskRegr]{TaskRegr} with the target specified by the hyper-parameter.
}

\examples{
library(mlr3)
task = tgen("simsurv")$generate(20)
pred = lrn("surv.coxph")$train(task)$predict(task)
po = po("trafopredtask_survregr", target = "lp")
po$train(list(task = task, pred = pred))[[1]]
new_task = po$predict(list(task = task, pred = pred))[[1]]
print(new_task)
new_task$truth() == pred$lp

}
\seealso{
Other PipeOps: 
\code{\link{PipeOpPredTransformer}},
\code{\link{PipeOpTaskTransformer}},
\code{\link{PipeOpTransformer}},
\code{\link{mlr_pipeops_trafopred_regrsurv}},
\code{\link{mlr_pipeops_trafopred_survregr}},
\code{\link{mlr_pipeops_trafotask_regrsurv}},
\code{\link{mlr_pipeops_trafotask_survregr}}

Other Transformers: 
\code{\link{PipeOpPredTransformer}},
\code{\link{PipeOpTaskTransformer}},
\code{\link{PipeOpTransformer}}
}
\concept{PipeOps}
\concept{Transformers}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3proba:PipeOpTransformer]{mlr3proba::PipeOpTransformer}} -> \code{PipeOpPredTaskSurvRegr}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpPredTaskSurvRegr$new()}}
\item \href{#method-clone}{\code{PipeOpPredTaskSurvRegr$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3proba" data-topic="PipeOpTransformer" data-id="predict_internal">}\href{../../mlr3proba/html/PipeOpTransformer.html#method-predict_internal}{\code{mlr3proba::PipeOpTransformer$predict_internal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3proba" data-topic="PipeOpTransformer" data-id="train_internal">}\href{../../mlr3proba/html/PipeOpTransformer.html#method-train_internal}{\code{mlr3proba::PipeOpTransformer$train_internal()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredTaskSurvRegr$new(id = "trafopredtask_survregr", param_vals = list())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredTaskSurvRegr$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
